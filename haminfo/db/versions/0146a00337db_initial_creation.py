"""Initial Creation

Revision ID: 0146a00337db
Revises:
Create Date: 2021-12-28 08:54:45.700776

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
import imp
import os

# revision identifiers, used by Alembic.
revision = '0146a00337db'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    alembic_helpers = imp.load_source('alembic_helpers', (
        op.get_context().script.dir + '/alembic_helpers.py'))
    if alembic_helpers.table_does_not_exist('station'):
        op.execute("create sequence station_id_seq")
        print("Creating table station")
        op.create_table('station',
            sa.Column('id', sa.Integer(), sa.Sequence('station_id_seq'), nullable=False),  # noqa
            sa.Column('state_id', sa.String(), nullable=False),
            sa.Column('repeater_id', sa.Integer(), nullable=False),
            sa.Column('last_update', sa.Date(), nullable=True),
            sa.Column('frequency', sa.Float(decimal_return_scale=4),
                      nullable=True),
            sa.Column('input_frequency', sa.Float(decimal_return_scale=4),
                      nullable=True),
            sa.Column('freq_band', sa.String(), nullable=True),
            sa.Column('offset', sa.Float(decimal_return_scale=4),
                      nullable=True),
            sa.Column('lat', sa.Float(), nullable=True),
            sa.Column('long', sa.Float(), nullable=True),
            sa.Column('location',
                      geoalchemy2.types.Geography(
                          geometry_type='POINT',
                          from_text='ST_GeogFromText',
                          name='geography'),
                      nullable=True),
            sa.Column('uplink_offset', sa.String(), nullable=True),
            sa.Column('downlink_offset', sa.String(), nullable=True),
            sa.Column('uplink_tone', sa.Float(decimal_return_scale=3),
                      nullable=True),
            sa.Column('downlink_tone', sa.Float(decimal_return_scale=3),
                      nullable=True),
            sa.Column('nearest_city', sa.String(), nullable=True),
            sa.Column('landmark', sa.String(), nullable=True),
            sa.Column('country', sa.String(), nullable=True),
            sa.Column('state', sa.String(), nullable=True),
            sa.Column('county', sa.String(), nullable=True),
            sa.Column('callsign', sa.String(), nullable=True),
            sa.Column('use', sa.String(), nullable=True),
            sa.Column('operational_status', sa.String(), nullable=True),
            sa.Column('ares', sa.Boolean(), nullable=True),
            sa.Column('races', sa.Boolean(), nullable=True),
            sa.Column('skywarn', sa.Boolean(), nullable=True),
            sa.Column('canwarn', sa.Boolean(), nullable=True),
            sa.Column('allstar_node', sa.Boolean(), nullable=True),
            sa.Column('echolink_node', sa.Boolean(), nullable=True),
            sa.Column('irlp_node', sa.Boolean(), nullable=True),
            sa.Column('wires_node', sa.Boolean(), nullable=True),
            sa.Column('fm_analog', sa.Boolean(), nullable=True),
            sa.Column('dmr', sa.Boolean(), nullable=True),
            sa.Column('dstar', sa.Boolean(), nullable=True),
            sa.PrimaryKeyConstraint('id', 'state_id', 'repeater_id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('station')
    # ### end Alembic commands ###
